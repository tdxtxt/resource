数据结构笔记

一、数组（线性）


二、链表（线性）


三、树（非线性）
   二叉树：每个节点包括所含数据，同时存在左右两个节点的引用
   满二叉树:第n层节点个数为2^(n-1)
   完全二叉树：从左到右每一层挨个节点存放数据
   根节点：没有父节点的节点
   叶子节点：没有左右子树的节点
   非叶子节点：有左子树或者右子树的节点  

四、数据结构
   4.1、队列
   
   
   4.2、栈
   
   
   4.4、堆【最大堆：任一节点值大于等于左右子节点的值，并且为完全二叉树】
	    堆顶：根节点元素
		堆底：最后一层二叉树中最右边一个元素
        使用数组实现技巧：设当前节点为第n个索引，求左右子节点和父节点分别为第几个索引？左节点索引=2*n   右节点索引=2*n+1    父节点索引=n/2
		
		添加元素（SiftUp上浮操作）：先放入到堆底，然后和父节点比较，若比其大，则交换位置，循环上浮直到结束
        取出元素（SiftDown下浮操作）: 取出对顶元素，同时将堆底元素放入到堆顶，再把堆顶元素依次和左右子元素中最大元素互换位置，循环下浮直到结束
		replace:取出最大元素后，放入一个新元素  实现：可以直接将堆顶元素替换以后SiftDown。
		heapify:将任意数组整理为堆的形状  实现:找到最后一个非叶子节点()，依次-1循环执行SiftDown操作
   
   4.3、二分搜索树【任一节值大于左节点值并且小于右节点的值，并且为二叉树】
   
   
   4.4、集合（Set类）
   
   
   4.5、映射（Map类）
   
   
   4.6、List类